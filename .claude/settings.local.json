{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(cp:*)",
      "Bash(git init:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(find:*)",
      "Bash(ls:*)",
      "Bash(gcloud logging read:*)",
      "Bash(gcloud run services describe:*)",
      "mcp__serena__initial_instructions",
      "mcp__serena__find_symbol",
      "mcp__serena__list_dir",
      "mcp__serena__search_for_pattern",
      "Bash(gcloud builds submit:*)",
      "Bash(gcloud builds describe:*)",
      "Bash(gcloud run deploy:*)",
      "Bash(gcloud builds log:*)",
      "mcp__serena__find_file",
      "mcp__serena__get_symbols_overview",
      "Bash(grep:*)",
      "Bash(gcloud secrets versions access:*)",
      "Bash(touch:*)",
      "Bash(gcloud run logs read:*)",
      "Bash(gcloud run services logs read:*)",
      "Bash(docker build:*)",
      "Bash(docker push:*)",
      "Bash(gcloud config get-value:*)",
      "Bash(docker tag:*)",
      "Bash(say \"Found the bug! There''s a Python error in the output handling. Working on a quick fix now.\")",
      "Bash(PROJECT_ID=test0620-463518 VERSION=2.3.26 docker build -t gcr.io/$PROJECT_ID/anava-deployment:v$VERSION .)",
      "Bash(export PROJECT_ID=test0620-463518)",
      "Bash(export VERSION=2.3.26)",
      "WebFetch(domain:anava-deployment-service-256934496233.us-central1.run.app)",
      "WebFetch(domain:anava-deploy-392865621461.us-central1.run.app)",
      "Bash(gcloud run services list:*)",
      "WebFetch(domain:anava-deployment-service-j4zyxecn7a-uc.a.run.app)",
      "Bash(gcloud run services add-iam-policy-binding:*)",
      "Bash(gcloud beta run services add-iam-policy-binding:*)",
      "Bash(gcloud projects list:*)",
      "WebFetch(domain:anava-deployment-service-392865621461.us-central1.run.app)",
      "Bash(gcloud run revisions describe:*)",
      "Bash(curl:*)",
      "Bash(gcloud firestore documents read:*)",
      "Bash(# Get the part up to the closing style tag (line 897)\nhead -n 897 /Users/ryanwager/terraform-installer/web-service/cloud-run/templates/dashboard.html > /tmp/dashboard_new.html\n\n# Add our additional styles\ncat /Users/ryanwager/terraform-installer/web-service/cloud-run/additional_styles.css >> /tmp/dashboard_new.html\n\n# Add the closing style tag and continue to just before showSuccessResults\necho \"\"    </style>\"\" >> /tmp/dashboard_new.html\nsed -n ''899,1503p'' /Users/ryanwager/terraform-installer/web-service/cloud-run/templates/dashboard.html >> /tmp/dashboard_new.html\n\n# Add our new showSuccessResults function\ncat /Users/ryanwager/terraform-installer/web-service/cloud-run/new_show_success_function.js >> /tmp/dashboard_new.html\n\n# Skip the old showSuccessResults and get everything up to downloadConfiguration\nsed -n ''1672,1701p'' /Users/ryanwager/terraform-installer/web-service/cloud-run/templates/dashboard.html >> /tmp/dashboard_new.html\n\n# Add our new downloadConfiguration function\ncat /Users/ryanwager/terraform-installer/web-service/cloud-run/new_download_function.js >> /tmp/dashboard_new.html\n\n# Skip the old downloadConfiguration and get the rest of the file\ntail -n +1752 /Users/ryanwager/terraform-installer/web-service/cloud-run/templates/dashboard.html >> /tmp/dashboard_new.html\n\n# Replace the original file\ncp /tmp/dashboard_new.html /Users/ryanwager/terraform-installer/web-service/cloud-run/templates/dashboard.html\necho \"\"Dashboard updated successfully!\"\")",
      "Bash(./deploy.sh)",
      "Bash(./deploy_to_production.sh)",
      "Bash(gcloud builds list:*)",
      "Bash(--source . )",
      "Bash(--region us-central1 )",
      "Bash(--platform managed )",
      "Bash(--allow-unauthenticated )",
      "Bash(--set-env-vars REDIS_HOST=10.150.87.59,GOOGLE_CLIENT_ID=392865621461-10umqfuknp5r7p30m92l9r2e8126n5cl.apps.googleusercontent.com,GOOGLE_CLIENT_SECRET=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 )",
      "Bash(--max-instances 10 )",
      "Bash(--memory 1Gi )",
      "Bash(--cpu 1 )",
      "Bash(--timeout 300)",
      "Bash(timeout:*)",
      "Bash(gcloud run operations list:*)",
      "Bash(gcloud beta run deploy:*)",
      "Bash(--source . )",
      "Bash(--region us-central1 )",
      "Bash(--async )",
      "Bash(--platform managed)",
      "Bash(gcloud run revisions list:*)",
      "Bash(--image gcr.io/anava-ai/anava-deploy:v2.3.29 )",
      "Bash(--region us-central1 )",
      "Bash(gcloud firestore operations list:*)",
      "Bash(open https://anava-deploy-392865621461.us-central1.run.app)",
      "Bash(python3:*)",
      "Bash(npx:*)"
    ],
    "deny": []
  }
}